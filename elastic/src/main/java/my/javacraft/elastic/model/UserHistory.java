package my.javacraft.elastic.model;

import jakarta.validation.constraints.NotEmpty;
import java.nio.charset.StandardCharsets;
import lombok.Data;
import lombok.ToString;

@Data
@ToString
public class UserHistory {
    @NotEmpty
    Long count;
    @NotEmpty
    String updated;
    @NotEmpty
    String elasticId;
    @NotEmpty
    String userId;
    @NotEmpty
    String recordId;
    @NotEmpty
    String searchType;
    @NotEmpty
    String searchValue;

    public UserHistory() {} // we need default constructor for jackson

    public UserHistory(String updated, UserClick userClick) {
        this.count = 1L;
        this.updated = updated;
        this.recordId = userClick.getRecordId();
        this.userId = userClick.getUserId();
        this.elasticId = getElasticId(userClick);
        this.searchType = userClick.getSearchType();
        this.searchValue = userClick.getSearchPattern();
    }

    public String getElasticId(UserClick userClick) {
        // Elasticsearch autogenerated IDs uses a form of base64 encoding, see TimeBasedUUIDGenerator (repo: elastic/elasticsearch)
        // _id is limited to 512 bytes in size and larger values will be rejected, that means we should limit how we generated id.
        // UUID.nameUUIDFromBytes uses 3rd UUID type (Name-based)
        return new String("%s-%s-%s".formatted(
                userClick.getRecordId(),
                userClick.getSearchType(),
                userClick.getUserId()
        ).getBytes(StandardCharsets.UTF_8));
    }
}
